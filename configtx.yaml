---
Organizations:
  - &OrdererOrg
    Name: OrdererMSP
    ID: OrdererMSP
    MSPDir: ./crypto-config/ordererOrganizations/example.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('OrdererMSP.member')"
      Writers:
        Type: Signature
        Rule: "OR('OrdererMSP.member')"
      Admins:
        Type: Signature
        Rule: "OR('OrdererMSP.admin')"
  - &Org1
    Name: Org1MSP
    ID: Org1MSP
    MSPDir: ./crypto-config/peerOrganizations/org1.example.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('Org1MSP.admin', 'Org1MSP.peer', 'Org1MSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('Org1MSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('Org1MSP.admin', 'Org1MSP.peer')"
    AnchorPeers:
       - Host: peer0.org1.example.com
         Port: 11051

  - &Org2
    Name: Org2MSP
    ID: Org2MSP
    MSPDir: ./crypto-config/peerOrganizations/org2.example.com/msp
    Policies:
      Readers:
        Type: Signature
        Rule: "OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')"
      Writers:
        Type: Signature
        Rule: "OR('Org2MSP.admin', 'Org2MSP.peer', 'Org2MSP.client')"
      Admins:
        Type: Signature
        Rule: "OR('Org2MSP.admin')"
      Endorsement:
        Type: Signature
        Rule: "OR('Org2MSP.admin', 'Org2MSP.peer')"
    AnchorPeers:
       - Host: peer0.org2.example.com
         Port: 13051

# Capabilities:
#   # Channel capabilities apply to both the orderers and the peers and must be
#   # supported by both.
#   # Set the value of the capability to true to require it.
#   Channel: &ChannelCapabilities
#     # V2_0 capability ensures that orderers and peers behave according
#     # to v2.0 channel capabilities. Orderers and peers from
#     # prior releases would behave in an incompatible way, and are therefore
#     # not able to participate in channels at v2.0 capability.
#     # Prior to enabling V2.0 channel capabilities, ensure that all
#     # orderers and peers on a channel are at v2.0.0 or later.
#     V2_0: true
#   # Orderer capabilities apply only to the orderers, and may be safely
#   # used with prior release peers.
#   # Set the value of the capability to true to require it.
#   Orderer: &OrdererCapabilities
#     # V2_0 orderer capability ensures that orderers behave according
#     # to v2.0 orderer capabilities. Orderers from
#     # prior releases would behave in an incompatible way, and are therefore
#     # not able to participate in channels at v2.0 orderer capability.
#     # Prior to enabling V2.0 orderer capabilities, ensure that all
#     # orderers on channel are at v2.0.0 or later.
#     V2_0: true
#   # Application capabilities apply only to the peer network, and may be safely
#   # used with prior release orderers.
#   # Set the value of the capability to true to require it.
#   Application: &ApplicationCapabilities
#     # V2.5 for Application enables the new non-backwards compatible
#     # features of fabric v2.5, namely the ability to purge private data.
#     # Prior to enabling V2.5 application capabilities, ensure that all
#     # peers on a channel are at v2.5.0 or later.
#     V2_5: true

Capabilities:
  Channel: &ChannelCapabilities
    V2_0: true
  Orderer: &OrdererCapabilities
    V2_0: true
  Application: &ApplicationCapabilities
    V2_0: true

Application: &ApplicationDefaults
  # Organizations is the list of orgs which are defined as participants on
  # the application side of the network
  Capabilities: *ApplicationCapabilities
  Organizations:
    - *Org1
    - *Org2
  Policies:
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    Admins:
      Type: ImplicitMeta
      Rule: "ANY Admins"
    LifecycleEndorsement:
      Type: ImplicitMeta
      Rule: "ANY Endorsement"
    Endorsement:
      Type: ImplicitMeta
      Rule: "ANY Endorsement"



Orderer: &OrdererDefaults
  Capabilities: *OrdererCapabilities
  OrdererType: etcdraft
  Addresses:
    - orderer.example.com:7049
    - orderer2.example.com:7054
    - orderer3.example.com:7059
    - orderer4.example.com:7064
    - orderer5.example.com:7069
  BatchTimeout: 2s # Amount of time to wait before creating a batch
  BatchSize: 
    MaxMessageCount: 10 # Max number of messages to permit in a batch
    AbsoluteMaxBytes: 99 MB # Preferred max number of bytes allowed for serialised messages in a batch
    PreferredMaxBytes: 512 KB # Preferred max number of bytes allowed for serialised messages in a batch.
    # Message larger than the preferred max bytes will result in a batch larger than preferred max bytes
  EtcdRaft:
    Consenters:
      - Host: orderer.example.com
        Port: 7049 #ORDERERGENERALLISTENERPORT
        ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
        ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
      - Host: orderer2.example.com
        Port: 7054
        ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
        ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
      - Host: orderer3.example.com
        Port: 7059
        ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt
        ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt
      - Host: orderer4.example.com
        Port: 7064
        ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt
        ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt
      - Host: orderer5.example.com
        Port: 7069
        ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt
        ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt
  Policies:
    Readers:
      Type: Signature
      Rule: "OR('OrdererMSP.member')"
    Writers:
      Type: Signature
      Rule: "OR('OrdererMSP.member')"
    Admins:
      Type: Signature
      Rule: "OR('OrdererMSP.admin')"
    # BlockValidation specifies what signatures must be included in the block
    # from the orderer for the peer to validate it.
    BlockValidation:
      Type: ImplicitMeta
      Rule: "ANY Writers"


Channel: &ChannelDefaults
  # Policies defines the set of policies at this level of the config tree
  # For Channel policies, their canonical path is
  #   /Channel/<PolicyName>
  Policies:
    # Who may invoke the 'Deliver' API
    Readers:
      Type: ImplicitMeta
      Rule: "ANY Readers"
    # Who may invoke the 'Broadcast' API
    Writers:
      Type: ImplicitMeta
      Rule: "ANY Writers"
    # By default, who may modify elements at this config level
    Admins:
      Type: ImplicitMeta
      Rule: "MAJORITY Admins"
  Capabilities: *ChannelCapabilities


Profiles:
  ChannelUsingRaft:
    <<: *ChannelDefaults
    Orderer:
      <<: *OrdererDefaults
      OrdererType: etcdraft
      EtcdRaft:
        Consenters:
          - Host: orderer.example.com
            Port: 7049
            ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
            ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/server.crt
          - Host: orderer2.example.com
            Port: 7054
            ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
            ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/tls/server.crt
          - Host: orderer3.example.com
            Port: 7059
            ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt
            ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer3.example.com/tls/server.crt
          - Host: orderer4.example.com
            Port: 7064
            ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt
            ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer4.example.com/tls/server.crt
          - Host: orderer5.example.com
            Port: 7069
            ClientTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt
            ServerTLSCert: crypto-config/ordererOrganizations/example.com/orderers/orderer5.example.com/tls/server.crt
      Organizations:
        - *OrdererOrg
    Consortiums:
      SampleConsortium:
        Organizations:
          - *Org1
          - *Org2

  MyChannel:
    Consortium: SampleConsortium
    <<: *ChannelDefaults
    Application:
      <<: *ApplicationDefaults
      Organizations:
        - *Org1
        - *Org2






